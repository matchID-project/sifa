recipes:
  french_name_normalize_sifa:
    input: 
      dataset: sifa
      chunk: 1000
    output: replace_output
    test_chunk_size: 1000
    steps:
    steps:
      - exec:
          df['matchid_name_match'] = df['nom']+ " " + df['prenom1'] + np.where(df['prenom2']=="", "", " " + df['prenom2']) + np.where(df['prenom3']=="", "", " " + df['prenom3'])
      - map:
          matchid_name_last_match: nom
          matchid_name_first_match: prenom1
          matchid_name_first_alter_match: prenom2
      - normalize:
          select: matchid_name_.*match
      - replace:
          select: matchid_name_first_match
          regex:
            - '(\S+\s+\S+)\s.*': '\1'
      - join:
          type: in_memory
          dataset: french_first_names
          strict:
            matchid_name_first_match: first_name
          select:
            matchid_name_first_freq: frequency    
      - exec:
          - df['matchid_name_first_alter_match']=np.where((df['matchid_name_first_freq']=='') & (df['matchid_name_first_alter_match']==''),df['matchid_name_first_match'].replace(r'^\S+\s+','', regex=True),df['matchid_name_first_alter_match'].replace(r'^(\S+\s+\S+\s+|\S+$)','', regex=True))          
          - df['matchid_name_first_match']=np.where((df['matchid_name_first_freq']=='') & (df['prenom2']==''),df['matchid_name_first_match'].replace(r'\s+.*','', regex=True),df['matchid_name_first_match'])
      - replace:
          select: matchid_name_match
          regex:
            - (^|\s)(le|du|de|de la|da|del|los|l)(\s): '\1\3'
