recipes:
  dataprep_mmo:
    test_chunk_size: 500
    input: mmo
    output: mmo_index
    threads: 10
    steps:
      - replace: #remove trailing blank spaces
          select: .*
          regex:
            - \s*$: ''
      - eval: #tag the dataset
          - matchid_src: str("mmo")
          - matchid_id : sha1(row)
      - eval:
          - matchid_location_countrycode_src: commune_naissance_sngi if dep_naissance_sngi == "99" else "FRANCE"                      
      - map:
          #mappings id, name, sex, date and location
          matchid_H_Salarie_SQN: H_Salarie_SQN
          matchid_CodeAPET: CodeAPET
          matchid_EffectifFinPeriode: EffectifFinPeriode
          matchid_name_last_src: NomFamille
          matchid_name_first_src: Prenoms
          matchid_sex_src: Sexe
          matchid_date_birth_src: DateNaissance
          matchid_location_city_src: commune_naissance_sngi
          matchid_location_depcode_src: dep_naissance_sngi
          matchid_location_countrycode: matchid_location_countrycode_src
      
      - keep: 
          select: matchid_.*
      # noms

      - french_name_normalize:
      - french_name_frequency:   
      #- pause:
      # dates
      - map:
          matchid_date_birth: matchid_date_birth_src      
      - map:
          matchid_date_birth_str: matchid_date_birth
          matchid_sex: matchid_sex_src
      - parsedate : 
          select: matchid_date_birth$
          format: "%d%m%Y"
      # lieu de naissance    
      #- eval:
       #   - matchid_location_countrycode : str("FRA") if matchid_location_countrycode_src == "FRANCE" else str("XXX")
      - replace:
          select: matchid_location_countrycode
          regex: 
            - '^((?!FRANCE).)*$': 'XXX'
            - 'FRANCE': 'FRA'
      - replace:
          select: matchid_sex
          regex: 
            - '01': '1'
            - '02': '2'
      - map:
          matchid_location_city_norm: matchid_location_city_src
      - normalize: 
          select: matchid_location_city_norm
      - french_city_norm:
      - map:
          matchid_location_depcode: matchid_location_depcode_src

      - join:
          type : in_memory
          dataset: french_citycodes_fuzzy
          fuzzy:
            matchid_location_city_norm: norm_name
          strict: 
            # matchid_location_city_norm: norm_name
            matchid_location_depcode: dep_code
            matchid_location_countrycode: CODEISO3
          select: 
            matchid_location_citycode: insee_code
            matchid_location_citycode_history: insee_code_history
            matchid_location_city: name
            matchid_location_city_alter: newest_name
            matchid_location_depcode_alter: newest_dep_code
            matchid_location_city_population: population
            matchid_location_city_surface: surface
            matchid_location_city_geopoint_2d: geopoint_2d
      - delete:
          select: matchid_location_city_norm.*|matchid_location_depcode_ref
      - replace:
          select: matchid_location_depcode
          regex: 
            - '^.{0,1}$': '99'
      - map:
          matchid_location_country: matchid_location_countrycode_src   
      - replace:
          select: matchid_location_city
         
          regex: 
            - '^.{0,1}$': matchid_location_city_src
      - pause:
      - eval: # override previous matches only if matched
          - matchid_location_city: matchid_location_city_src if ('matchid_location_city' not in row.keys()) else (matchid_location_city_src if (matchid_location_city=="") else matchid_location_city )
          #- matchid_location_depcode: str("99") if ('matchid_location_depcode' not in row.keys()) else ( str("99") if (matchid_location_depcode == "") else matchid_location_depcode)
          #- matchid_location_citycode_history: list([]) if (matchid_location_citycode_history=="") else json.loads(matchid_location_citycode_history)       
      - pause:
      - to_float: 
          select: ^matchid_location_(latitude|longitude)$
          na_value: 90
      